version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: igreja-postgres
    environment:
      POSTGRES_DB: igreja_membros
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - igreja-network
    restart: unless-stopped

  # Redis para filas e cache
  redis:
    image: redis:7-alpine
    container_name: igreja-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - igreja-network
    restart: unless-stopped

  # Backend API
  backend:
    build: ./backend
    container_name: igreja-backend
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/igreja_membros?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: sua_chave_secreta_super_forte_aqui_mude_em_producao
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
      # Email Configuration
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_SECURE: false
      SMTP_USER: seu_email@gmail.com
      SMTP_PASS: sua_senha_de_app
      SMTP_FROM: noreply@igreja.com
      # Logs
      LOG_LEVEL: info
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/whatsapp-session:/app/whatsapp-session
      - ./backend/uploads:/app/uploads
    networks:
      - igreja-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build: ./frontend
    container_name: igreja-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - igreja-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Proxy (opcional - para produção)
  nginx:
    image: nginx:alpine
    container_name: igreja-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - igreja-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  igreja-network:
    driver: bridge

---